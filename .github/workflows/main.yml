---
name: main

on:
  push:
    branches: [ main ]
    tags: ['*']
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    if: "!contains(github.event.commits[0].message, 'ci skip')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Zig
      uses: mlugg/setup-zig@v1
      with:
        version: 0.13.0

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Run tests
      run: |
        ROOTDIR=$PWD
        cd /tmp/
        git clone https://github.com/aws/clock-bound
        sudo cp -v clock-bound/clock-bound-ffi/include/clockbound.h /usr/include/
        cd $ROOTDIR/
        go test -v ./...

    - name: Release from tags
      if: startsWith(github.event.ref, 'refs/tags/v')
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        ROOTDIR=$PWD
        # Static build FFI using musl as target:
        cd /tmp/clock-bound/clock-bound-ffi/
        rustup target add x86_64-unknown-linux-musl
        cargo build --release --target=x86_64-unknown-linux-musl
        # Download musl and install (for static building):
        cd /tmp/ && wget https://musl.libc.org/releases/musl-1.2.5.tar.gz
        tar xvzf musl-1.2.5.tar.gz
        cd musl-1.2.5/ && ./configure && make && sudo make install
        cd /tmp/clock-bound/
        # sudo cp -v clock-bound-ffi/include/clockbound.h /usr/include/
        # sudo cp -v target/release/libclockbound.a /usr/lib/
        # sudo cp -v target/release/libclockbound.so /usr/lib/
        # sudo mkdir -p /usr/local/musl/include/
        # sudo mkdir -p /usr/local/musl/lib/
        # sudo cp -v clock-bound-ffi/include/clockbound.h $ROOTDIR/
        sudo cp -v clock-bound-ffi/include/clockbound.h /usr/local/musl/include/
        sudo cp -v target/x86_64-unknown-linux-musl/release/libclockbound.a /usr/local/musl/lib/
        cd $ROOTDIR/example/
        # GOOS=linux GOARCH=amd64 go build -v
        # cp -v /tmp/clock-bound/clock-bound-ffi/include/clockbound.h .
        # cp -v /tmp/clock-bound/target/release/libclockbound.a .
        # CC="$(which zig) cc -target x86_64-linux-musl -I. -I/usr/local/musl/include" GOOS=linux GOARCH=amd64 go build -v --ldflags '-linkmode=external -extldflags=-static'
        # CC="$(which zig) cc -target x86_64-linux-musl -I. -L/usr/local/musl/lib -lunwind" GOOS=linux GOARCH=amd64 go build -v --ldflags '-linkmode=external -extldflags=-static'
        CC="/usr/local/musl/bin/musl-gcc -lunwind" GOOS=linux GOARCH=amd64 go build -v --ldflags '-linkmode=external -extldflags=-static'
        tar czvf cbffisample-${GITHUB_REF_NAME}-x86_64-linux.tar.gz example
        gh release create ${GITHUB_REF_NAME} ./*.tar.gz --generate-notes
